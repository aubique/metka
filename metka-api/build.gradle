plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
}

group = 'ensibs.c4'
version = '0.0.4'
sourceCompatibility = '11'

configurations {
    clientSide
    compileOnly {
        extendsFrom annotationProcessor
    }
    //textImplementation.extendsFrom compileOnly
    //testAnnotationProcesssor.extendsFrom annotationProcessor
}

repositories {
    mavenCentral()
}

dependencies {
    // ANGULAR SPA
    // clientSide(project(':metka-ui'))
    // SPRING BOOT, TESTING
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-json'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.mockito:mockito-core'
    // LOMBOK, DB DRIVER
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    testRuntimeOnly 'com.h2database:h2'
    // 3RD PARTY
    implementation 'com.google.code.gson:gson'
    configurations.runtimeOnly.extendsFrom(configurations.clientSide)
}

test {
    useJUnitPlatform()
}

def profiles = 'prod'
bootRun {
    args = ["--spring.profiles.active=" + profiles]
}
